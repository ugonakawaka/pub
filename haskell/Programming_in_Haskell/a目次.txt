

目次
------
第１章	はじめの第一歩
第２章	型を信じろ！
第３章	関数の構文
第４章	Hello 再帰！
第５章	高階関数
第６章	モジュール
第７章	型やクラスを自分で作ろう
第８章	入出力
第９章	もっと入力、もっと出力
第１０章	関数型問題解決法
第１１章	ファンクターからアプリカティブファンクターへ
第１２章	モノイド
第１３章	モナドがいっぱい
第１４章	もうちょっとだけモナド
第１５章	Zipper

------

https://learnyouahaskell.github.io/chapters.html

------
https://stackoverflow.com/questions/5417623/ghci-not-in-scope-message


------
ghciを起動するよ

$ stack exec ghci


------
vscodeでの機能拡張のために

brew install haskell-language-server

------

ghciで宣言？

ghci> let lucky x = show (x + 1)
ghci> :t lucky
lucky :: (Num a) => a -> String


use multi-line command block
:{
lucky :: Int -> String
lucky a = show(a)
:}

:type lucky 
lucky :: Int -> String

==========
第1章 はじめの第一歩

§1.1 関数呼び出し
§1.2 赤ちゃんの最初の関数
§1.3 リスト入門
§1.4 レンジでチン！
§1.5 リスト内包表記
§$!.6 タプル

第2章 型を信じろ！

§2.1 明示的な型宣言
§2.2 一般的なHaskellの型
§2.3 型変数
§2.4 型クラス 初級講座

第3章 関数の構文

§3.1 パターンマッチ
§3.2 場合分けして、きっちりガード！
§3.3 where?!
§3.4 let It Be
§3.5 case 式

第4章 Hello 再帰！

§4.1 最高に最高！
§4.2 さらにいくつかの再帰関数
§4.3 クイック、ソート！
§4.4 再帰的に考える

第5章 高階関数

§5.1 カリー化関数
§5.2 高階実演
§5.3 関数プログラマの道具箱
§5.4 ラムダ式
§5.5 畳み込み、見込みアリ！
§5.6 $ を使った関数適用
§5.7 関数合成

第6章 モジュール

§6.1 モジュールをインポートする
§6.2 標準モジュールの関数で問題を解く
§6.3 キーから値へのマッピング
§6.4 モジュールを作ってみよう

第7章 型や型クラスを自分で作ろう

§7.1 新しいデータ型を定義する
§7.2 形づくる
§7.3 レコード構文
§7.4 型引数
§7.5 インスタンスの自動導出
§7.6 型シノニム
§7.7 再帰的なデータ構造
§7.8 型クラス 中級講座
§7.9 YesとNoの型クラス
§7.10 Functor型クラス
§7.11 型を司るもの、種類

第8章 入出力

§8.1 不純なものと純粋なものを分離する
§8.2 Hello, World!
§8.3 I/O アクションどうしをまとめる
§8.4 いくつかの便利なI/O関数
§8.5 I/O アクションおさらい

第9章 もっと入力、もっと出力

§9.1 ファイルとストリーム
§9.2 ファイルの読み書き
§9.3 ToDoリスト
§9.4 コマンドライン引数
§9.5 ToDoリストをもっと楽しむ
§9.6 ランダム性
§9.7 bytestring

第10章 関数型問題解決法

§10.1 逆ポーランド記法電卓
§10.2 ヒースロー空港からロンドンへ

第11章 ファンクターからアプリカティブファンクターへ

§11.1 帰ってきたファンクター
§11.2 ファンクター則
§11.3 アプリカティブファンクターを使おう
§11.4 アプリカティブの便利な関数

第12章 モノイド

§12.1 既存の型を新しい型にくるむ
§12.2 Monoid大集合
§12.3 モノイドとの遭遇
§12.4 モノイドで畳み込む

第13章 モナドがいっぱい

§13.1 アプリカティブファンクターを強化する
§13.2 Maybeから始めるモナド
§13.3 Monad型クラス
§13.4 綱渡り
§13.5 do記法
§13.6 リストモナド
§13.7 モナド則

第14章 もうちょっとだけモナド

§14.1 Writer？中の人なんていません！
§14.2 Reader？それはあなたです！
§14.3 計算の状態の正体
§14.4 Errorを壁に
§14.5 便利なモナディック関数特集
§14.6 安全な逆ポーランド記法電卓を作ろう
§14.7 モナディック関数の合成
§14.8 モナドを作る

第15章 Zipper

§15.1 歩こう
§15.2 リストに注目する
§15.3 超シンプルなファイルシステム
§15.4 足下にご注意
§15.5 読んでくれてありがとう！
